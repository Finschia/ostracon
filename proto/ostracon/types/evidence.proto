syntax = "proto3";
package ostracon.types;

option go_package = "github.com/line/ostracon/proto/ostracon/types";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "ostracon/types/types.proto";
import "ostracon/types/validator.proto";

message Evidence {
  oneof sum {
    DuplicateVoteEvidence     duplicate_vote_evidence      = 1;
    LightClientAttackEvidence light_client_attack_evidence = 2;
  }
}

// DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
message DuplicateVoteEvidence {
  ostracon.types.Vote       vote_a             = 1;
  ostracon.types.Vote       vote_b             = 2;
  int64                     total_voting_power = 3; // total voting weight
  int64                     validator_power    = 4; // voting power
  google.protobuf.Timestamp timestamp          = 5 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  // *** Ostracon Extended Fields ***
  int64 voting_weight = 1000;
}

// LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
message LightClientAttackEvidence {
  ostracon.types.LightBlock conflicting_block            = 1;
  int64                     common_height                = 2;
  repeated ostracon.types.Validator byzantine_validators = 3;
  int64                             total_voting_power   = 4; // total voting weight
  google.protobuf.Timestamp         timestamp            = 5 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message EvidenceList {
  repeated Evidence evidence = 1 [(gogoproto.nullable) = false];
}
