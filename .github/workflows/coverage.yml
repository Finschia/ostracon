name: Test Coverage
on:
  pull_request:
  push:

jobs:
  split-test-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create a file with all the pkgs
        run: go list ./... > pkgs.txt
      - name: Split pkgs into 4 files
        run: split -d -n l/4 pkgs.txt pkgs.txt.part.
      # cache multiple
      - uses: actions/upload-artifact@v2
        with:
          name: "${{ github.sha }}-00"
          path: ./pkgs.txt.part.00
      - uses: actions/upload-artifact@v2
        with:
          name: "${{ github.sha }}-01"
          path: ./pkgs.txt.part.01
      - uses: actions/upload-artifact@v2
        with:
          name: "${{ github.sha }}-02"
          path: ./pkgs.txt.part.02
      - uses: actions/upload-artifact@v2
        with:
          name: "${{ github.sha }}-03"
          path: ./pkgs.txt.part.03

  build-libsodium:
    name: Build libsodium
    runs-on: ubuntu-latest
    needs: split-test-files
    steps:
      - uses: actions/checkout@v2
      - run: make libsodium
      - uses: actions/upload-artifact@v2
        with:
          name: libsodium
          path: crypto/vrf/internal/vrf/sodium

  build-linux:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goarch: "amd64"
            gcc: "gcc"
            package: ""
            host: ""
          - goarch: "arm64"
            gcc: "aarch64-linux-gnu-gcc"
            package: "g++-aarch64-linux-gnu"
            host: "aarch64-linux-gnu"
          - goarch: "arm"
            gcc: "arm-linux-gnueabi-gcc"
            package: "g++-arm-linux-gnueabi"
            host: "arm-linux-gnueabi"
    timeout-minutes: 5
    steps:
      - run: sudo apt update && sudo apt install -y ${{ matrix.package }} qemu-user-binfmt
        if: "matrix.package != ''"
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.15.4"
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: Build Linux
        run: GOOS=linux GOARCH=${{ matrix.goarch }} CC=${{ matrix.gcc }} TARGET_HOST=${{ matrix.host }} make build
        if: "env.GIT_DIFF != ''"
      - name: Build Linux with Libsodium
        run: GOOS=linux GOARCH=${{ matrix.goarch }} CC=${{ matrix.gcc }} TARGET_HOST=${{ matrix.host }} LIBSODIUM=1 make build
        if: "env.GIT_DIFF != ''"

  tests:
    runs-on: ubuntu-latest
    needs: build-libsodium
    strategy:
      fail-fast: false
      matrix:
        vrf: ["r2ishiguro", "libsodium"]
        part: ["00", "01", "02", "03"]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.15.4"
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/download-artifact@v2
        with:
          name: "${{ github.sha }}-${{ matrix.part }}"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v2
        with:
          name: libsodium
          path: crypto/vrf/internal/vrf/sodium
      - name: test & coverage report creation
        run: |
          cat pkgs.txt.part.${{ matrix.part }} | xargs go test -mod=readonly -timeout 10m -race -coverprofile=${{ matrix.part }}profile.out -covermode=atomic -tags ${{ matrix.vrf }}
        if: env.GIT_DIFF
      - uses: actions/upload-artifact@v2
        with:
          name: "${{ github.sha }}-${{ matrix.part }}-coverage"
          path: ./${{ matrix.part }}profile.out

  upload-coverage-report:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/download-artifact@v2
        with:
          name: "${{ github.sha }}-00-coverage"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v2
        with:
          name: "${{ github.sha }}-01-coverage"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v2
        with:
          name: "${{ github.sha }}-02-coverage"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v2
        with:
          name: "${{ github.sha }}-03-coverage"
        if: env.GIT_DIFF
      - run: |
          cat ./*profile.out | grep -v "mode: atomic" >> coverage.txt
        if: env.GIT_DIFF
      - uses: codecov/codecov-action@v1.0.13
        with:
          file: ./coverage.txt
        if: env.GIT_DIFF
