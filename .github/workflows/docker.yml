name: Build & Push
#  Build & Push rebuilds the ostracon docker image on every push to main and creation of tags
# and pushes the image to https://hub.docker.com/r/interchainio/simapp/tags
on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v[0-9]+.[0-9]+.[0-9]+-rc*" # Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ostracon/ostracon
          VERSION=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            DEFAULT_BRANCH=$(curl -s -H "Accept: application/vnd.github.v3+json" \
                             https://api.github.com/repos/Finschia/ostracon | \
                             grep default_branch | \
                             cut -d"\"" -f4)
            if [ "$DEFAULT_BRANCH" = "$VERSION" ]; then
              VERSION=latest
            fi
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION%.*}"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@master
#        with:
#          platforms: all

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1.3.0

#      - name: Login to DockerHub
#        if: ${{ github.event_name != 'pull_request' }}
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Publish to Docker Hub
#        uses: docker/build-push-action@v2.4.0
#        with:
#          context: .
#          file: ./DOCKER/Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.prep.outputs.tags }}
